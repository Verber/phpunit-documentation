<?xml version="1.0" encoding="utf-8" ?>

<chapter id="organizing-tests">
  <title>Организация тестов</title>

  <para>
    <indexterm><primary>Тест-комплект</primary></indexterm>

    Одной из целей PHPUnit (см. <xref linkend="goals" />) являются составные
    тесты: возможность запускать тест-кейсы в любом количестве и любой
    комбинации. Например, все тесты для проекта, тесты для всех классов
    компонента или же тест для определённого класса.
  </para>

  <para>
    PHPUnit поддерживает разные пути комбинирования и составления тест-кейсов в
    тест-комплекты. Эта глава расскажет о наиболее распространённых подходах.
  </para>

  <section id="organizing-tests.filesystem">
    <title>Составление тест-комплекта, используя файловую систему</title>

    <para>
      Скорее всего, самым простым способом составления тест-комплекта будет
      выделение всех исходных файлов тест-кейсов в отдельную директорию. PHPUnit
      может автоматически находить и запускать тест-кейсы при рекурсивном обходе
      директории с тестами.
    </para>

    <para>
      Давайте взглянем на тест-комплект библиотеки <ulink url="http://github.com/sebastianbergmann/php-object-freezer/">Object_Freezer</ulink>.
      Глядя на структуру директорий этого проекта, видно, что классы тест-кейсов
      находятся в директории <filename>Tests</filename> и отражают структуру
      иходных классов тестируемой библиотеки, которая находится в директории
      <filename>Object</filename>:
    </para>

    <screen>Object                              Tests
|-- Freezer                         |-- Freezer
|   |-- HashGenerator               |   |-- HashGenerator
|   |   `-- NonRecursiveSHA1.php    |   |   `-- NonRecursiveSHA1Test.php
|   |-- HashGenerator.php           |   |
|   |-- IdGenerator                 |   |-- IdGenerator
|   |   `-- UUID.php                |   |   `-- UUIDTest.php
|   |-- IdGenerator.php             |   |
|   |-- LazyProxy.php               |   |
|   |-- Storage                     |   |-- Storage
|   |   `-- CouchDB.php             |   |   `-- CouchDB
|   |                               |   |       |-- WithLazyLoadTest.php
|   |                               |   |       `-- WithoutLazyLoadTest.php
|   |-- Storage.php                 |   |-- StorageTest.php
|   `-- Util.php                    |   `-- UtilTest.php
`-- Freezer.php                     `-- FreezerTest.php</screen>

    <para>
      Для запуска всех тестов библиотеки с помощью PHPUnit необходимо указать
      директорию в которой хранятся все тесты библиотеки:
    </para>

    <screen><userinput>phpunit Tests</userinput>
PHPUnit 3.7.0 by Sebastian Bergmann.

............................................................ 60 / 75
...............

Time: 0 seconds

OK (75 tests, 164 assertions)</screen>

    <note>
      <para>
        Если PHPUnit указать директорию, то утилита будет искать файлы с маской
        <filename>*Test.php</filename>.
      </para>
    </note>

    <para>
      Для запуска тест-кейса, объявленного в классе <literal>Object_FreezerTest</literal>,
      который находится в файле <filename>Tests/FreezerTest.php</filename>, можно
      использовать команду:
    </para>

    <screen><userinput>phpunit Tests/FreezerTest</userinput>
PHPUnit 3.7.0 by Sebastian Bergmann.

............................

Time: 0 seconds

OK (28 tests, 60 assertions)</screen>

    <para>
      Для более точного указания запускаемых тестов можно использовать параметр
      <literal>--filter</literal>:
    </para>

    <screen><userinput>phpunit --filter testFreezingAnObjectWorks Tests</userinput>
PHPUnit 3.7.0 by Sebastian Bergmann.

.

Time: 0 seconds

OK (1 test, 2 assertions)</screen>

    <note>
      <para>
        Пожалуй, единственным минусом будет то что, при таком пододе, нельзя
        запускать тесnы в определённом порядке. Это может привести к проблемам в
        зависимых тестах (см. <xref linkend="writing-tests-for-phpunit.test-dependencies"/>).
        Следующий раздел покажет как указать точный порядок выполнения
        тест-кейсов, используя файл настроек XML.
      </para>
    </note>
  </section>

  <section id="organizing-tests.xml-configuration">
    <title>Использование файла настроек XML для составления тест-комплектов</title>
    <indexterm><primary>Файл настроек XML</primary></indexterm>

    <para>
      Также, для составления тест-комплектов, можно использовать
      файл настроек XML для PHPUnit (<xref linkend="appendixes.configuration"/>).
      <xref linkend="organizing-tests.xml-configuration.examples.phpunit.xml"/>
      показывает элементарный пример, который добавит все классы с маской <literal>*Test</literal>,
      которые находятся в файлах <filename>*Test.php</filename>. При поиске
      тест-кейсов директория <filename>Tests</filename> обходится рекурсивно.
    </para>

    <example id="organizing-tests.xml-configuration.examples.phpunit.xml">
      <title>Использование файла настроек XML для составления тест-комплектов</title>
      <programlisting><![CDATA[<phpunit>
  <testsuites>
    <testsuite name="Object_Freezer">
      <directory>Tests</directory>
    </testsuite>
  </testsuites>
</phpunit>]]></programlisting>
    </example>

    <para>
      Порядок, в котором будут выполнены тест-кейсы, можно указать следующим образом:
    </para>

    <example id="organizing-tests.xml-configuration.examples.phpunit.xml2">
      <title>Использование файла настроек XML для составления тест-комплектов с указанием точного порядка выполнения тест-кейсов</title>
      <programlisting><![CDATA[<phpunit>
  <testsuites>
    <testsuite name="Object_Freezer">
      <file>Tests/Freezer/HashGenerator/NonRecursiveSHA1Test.php</file>
      <file>Tests/Freezer/IdGenerator/UUIDTest.php</file>
      <file>Tests/Freezer/UtilTest.php</file>
      <file>Tests/FreezerTest.php</file>
      <file>Tests/Freezer/StorageTest.php</file>
      <file>Tests/Freezer/Storage/CouchDB/WithLazyLoadTest.php</file>
      <file>Tests/Freezer/Storage/CouchDB/WithoutLazyLoadTest.php</file>
    </testsuite>
  </testsuites>
</phpunit>]]></programlisting>
    </example>
  </section>
</chapter>
