<?xml version="1.0" encoding="utf-8" ?>

<chapter id="testcase-extensions">
  <title>テストケースの拡張</title>

  <caution>
    <para>
      このドキュメントは、すでにサポートが終了したバージョンの PHPUnit に関するものです。
    </para>

    <para>
      最新版の PHPUnit のドキュメントは
      <ulink url="../../current/ja/index.html">こちら</ulink>にあります。
    </para>
  </caution>

  <para>
    PHPUnit では、テストクラスの基底クラスである
    <literal>PHPUnit_Framework_TestCase</literal> を拡張するための方法を提供しています。
    これにより、出力内容やパフォーマンス低下のテストができるようになります。
  </para>

  <section id="testcase-extensions.output">
    <title>出力内容のテスト</title>

    <para>
      <indexterm><primary>PHPUnit_Extensions_OutputTestCase</primary></indexterm>

      メソッドの実行結果を確かめる方法として、(<literal>echo</literal> や
      <literal>print</literal> などによる)
      出力が期待通りのものかを調べたいこともあるでしょう。
      <literal>PHPUnit_Extensions_OutputTestCase</literal> クラスは、PHP の
      <ulink url="http://www.php.net/manual/ja/ref.outcontrol.php">
      出力バッファリング</ulink> 機能を使用してこの仕組みを提供します。
    </para>

    <para>
      <xref linkend="testcase-extensions.output.examples.OutputTest.php" />
      では、<literal>PHPUnit_Extensions_OutputTestCase</literal>
      のサブクラスを作成し、期待する出力内容を <literal>expectOutputString()</literal>
      メソッドで設定する方法を示します。
      期待通りの出力が得られなかった場合は、そのテストは失敗という扱いになります。
    </para>

    <example id="testcase-extensions.output.examples.OutputTest.php">
      <title>PHPUnit_Extensions_OutputTestCase の使用法</title>
      <programlisting><![CDATA[<?php
require_once 'PHPUnit/Extensions/OutputTestCase.php';

class OutputTest extends PHPUnit_Extensions_OutputTestCase
{
    public function testExpectFooActualFoo()
    {
        $this->expectOutputString('foo');
        print 'foo';
    }

    public function testExpectBarActualBaz()
    {
        $this->expectOutputString('bar');
        print 'baz';
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit OutputTest</userinput><![CDATA[
PHPUnit 3.3.0 by Sebastian Bergmann.

.F

Time: 0 seconds

There was 1 failure:

1) testExpectBarActualBaz(OutputTest)
Failed asserting that two strings are equal.
expected string <bar>
difference      <  x>
got string      <baz>

FAILURES!
Tests: 2, Assertions: 2, Failures: 1.]]></screen>
    </example>

    <para>
      <xref linkend="testcase-extensions.output.tables.api" />
      <literal>PHPUnit_Extensions_OutputTestCase</literal>
      が提供するメソッドをまとめたものです。
    </para>

    <table id="testcase-extensions.output.tables.api">
      <title>OutputTestCase</title>

      <tgroup cols="2" align="left" colsep="1" rowsep="1">
        <thead>
          <row>
            <entry>メソッド</entry>
            <entry>意味</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><literal>void expectOutputRegex(string $regularExpression)</literal></entry>
            <entry>出力が正規表現 <literal>$regularExpression</literal> にマッチするであろうという予測を設定します。</entry>
          </row>
          <row>
            <entry><literal>void expectOutputString(string $expectedString)</literal></entry>
            <entry>出力が文字列 <literal>$expectedString</literal> と等しくなるであろうという予測を設定します。</entry>
          </row>
          <row>
            <entry><literal>bool setOutputCallback(callable $callback)</literal></entry>
            <entry>たとえば出力時の正規化などに使用するコールバック関数を設定します。</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>

  <section id="testcase-extensions.performance">
    <title>パフォーマンス低下のテスト</title>

    <para>
      <indexterm><primary>PHPUnit_Extensions_PerformanceTestCase</primary></indexterm>

      <literal>PHPUnit_Extensions_PerformanceTestCase</literal>
      を継承したテストクラスを使用すると、
      関数やメソッドの実行が制限時間内に終わったかどうかなどをテストすることができます。
    </para>

    <para>
      <literal>PHPUnit_Extensions_PerformanceTestCase</literal>
      のサブクラスを作成してその <literal>setMaxRunningTime()</literal>
      メソッドを使用し、実行時間の最大値を制限する方法を
      <xref linkend="testcase-extensions.performance.examples.PerformanceTest.php" />
      で示します。
      もしテストが制限時間内に終了しなければ、そのテストは失敗という扱いになります。
    </para>

    <example id="testcase-extensions.performance.examples.PerformanceTest.php">
      <title>PHPUnit_Extensions_PerformanceTestCase の使用法</title>
      <programlisting><![CDATA[<?php
require_once 'PHPUnit/Extensions/PerformanceTestCase.php';

class PerformanceTest extends PHPUnit_Extensions_PerformanceTestCase
{
    public function testPerformance()
    {
        $this->setMaxRunningTime(2);
        sleep(1);
    }
}
?>]]></programlisting>
    </example>

    <para>
      <xref linkend="testcase-extensions.performance.tables.api" />
      は、<literal>PHPUnit_Extensions_PerformanceTestCase</literal>
      が実装しているメソッドをまとめたものです。
    </para>

    <table id="testcase-extensions.performance.tables.api">
      <title>PerformanceTestCase</title>

      <tgroup cols="2" align="left" colsep="1" rowsep="1">
        <thead>
          <row>
            <entry>メソッド</entry>
            <entry>意味</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><literal>void setMaxRunningTime(int $maxRunningTime)</literal></entry>
            <entry>テストの所要時間の最大値を (秒単位で) <literal>$maxRunningTime</literal> に設定します。</entry>
          </row>
          <row>
            <entry><literal>integer getMaxRunningTime()</literal></entry>
            <entry>このテストの最大所要時間を返します。</entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <para>
      <literal>PHPUnit_Framework_TestCase</literal> には、これら以外にも
      <literal>PHPUnit_Extensions_Database_TestCase</literal> や
      <literal>PHPUnit_Extensions_SeleniumTestCase</literal> といった拡張があります。
      これらについては、それぞれ <xref linkend="database" />
      と <xref linkend="selenium" /> で説明します。
    </para>
  </section>
</chapter>
