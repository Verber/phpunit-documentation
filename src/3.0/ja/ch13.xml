<?xml version="1.0" encoding="utf-8" ?>

<chapter id="code-coverage-analysis">
  <title>コードカバレッジ解析</title>

  <caution>
    <para>
      このドキュメントは、すでにサポートが終了したバージョンの PHPUnit に関するものです。
    </para>

    <para>
      最新版の PHPUnit のドキュメントは
      <ulink url="../../current/ja/index.html">こちら</ulink>にあります。
    </para>
  </caution>

  <para>
    ユニットテストでコードをテストする方法はわかりました。でも、
    テストそのものをテストするにはどうしたらいいのでしょう?
    テストされていないコードを見つけるには? 言い換えれば、まだテストで
    <emphasis>カバーされていない</emphasis>部分を見つけるには?
    完全にテストができたことをどうやって確認するの?
    これらのすべての疑問に対する答えとなるのが、コードカバレッジ解析という手法です。
    コードカバレッジ解析を行うと、
    コードのどの部分がテストされたのかを調べることができるようになります。
  </para>

  <para>
    <indexterm><primary>Code-Coverage (コードカバレッジ)</primary></indexterm>

    PHPUnit のコードカバレッジ解析では、<ulink url="http://www.xdebug.org/">Xdebug</ulink>
    拡張モジュールが提供するステートメントカバレッジ機能を利用しています。
    ステートメントカバレッジというのは、たとえば
    100 行のコードで構成されるメソッドがあった場合に、
    もしテストで実際に実行されたのがそのうちの 75 行だけだったなら、
    そのメソッドのコードカバレッジは 75 パーセントだと考えるということです。
  </para>

  <para>
    それでは、<xref linkend="test-first-programming.bankaccount-example.examples.BankAccount2.php" />
    の <literal>BankAccount</literal> クラスについての
    コードカバレッジレポートを作成してみましょう。
  </para>

  <screen><userinput>phpunit --report ./report BankAccountTest</userinput>
PHPUnit 3.0.0 by Sebastian Bergmann.

....

Time: 00:00

OK (4 tests)

Generating report, this may take a moment.</screen>

  <para>
    <xref linkend="code-coverage-analysis.figures.Code_Coverage.png" />
    は、コードカバレッジレポートの一部を抜粋したものです。
    テスト時に実行された行は、緑色で強調表示されます。
    実行可能なコードであるにもかかわらず実行されなかった行については赤色で強調表示されます。
    また、"無意味なコード" についてはオレンジ色で強調表示されます。
    行の左にある数字は、その行をカバーするテストの数を表します。
  </para>

  <figure id="code-coverage-analysis.figures.Code_Coverage.png">
    <title>setBalance() のコードカバレッジ</title>

    <graphic fileref="figures/Code_Coverage.png" />
  </figure>

  <para>
    <literal>BankAccount</literal> のコードカバレッジレポートからわかることは、
    <literal>setBalance()</literal>、<literal>depositMoney()</literal>
    をコールするテストがまだ存在しないということ、
    そして <literal>withdrawMoney()</literal>
    に正しい値を指定した場合のテストも存在しないということです。
    <literal>BankAccountTest</literal> クラスに追加すべきテストを
    <xref linkend="code-coverage-analysis.examples.BankAccountTest.php" />
    に示します。これによって、<literal>BankAccount</literal>
    クラスのテストケースを完全に網羅できるようになります。
  </para>

  <example id="code-coverage-analysis.examples.BankAccountTest.php">
    <title>完全なコードカバレッジを達成するために欠けているテスト</title>
    <programlisting><![CDATA[<?php
require_once 'PHPUnit/Framework.php';
require_once 'BankAccount.php';

class BankAccountTest extends PHPUnit_Framework_TestCase
{
    // ...

    public function testSetBalance()
    {
        $this->ba->setBalance(1);
        $this->assertEquals(1, $this->ba->getBalance());
    }

    public function testDepositAndWidthdrawMoney()
    {
        $this->ba->depositMoney(1);
        $this->assertEquals(1, $this->ba->getBalance());

        $this->ba->withdrawMoney(1);
        $this->assertEquals(0, $this->ba->getBalance());
    }
}
?>]]></programlisting>
  </example>

  <para>
    <xref linkend="code-coverage-analysis.figures.Code_Coverage2.png" /> は、
    テストを追加した後の <literal>setBalance()</literal> のコードカバレッジです。
  </para>

  <figure id="code-coverage-analysis.figures.Code_Coverage2.png">
    <title>setBalance() にテストを追加した後のコードカバレッジ</title>

    <graphic fileref="figures/Code_Coverage2.png" />
  </figure>
</chapter>
