<?xml version="1.0" encoding="utf-8" ?>

<chapter id="testcase-extensions">
  <title>TestCase Extensions</title>

  <caution>
    <para>
      You are looking at the documentation for a version of PHPUnit that is no
      longer supported.
    </para>

    <para>
      The documentation for the current version of PHPUnit can be found
      <ulink url="../../current/en/index.html">here</ulink>.
    </para>
  </caution>

  <para>
    PHPUnit provides extensions to the standard base-class for test classes,
    <literal>PHPUnit_Framework_TestCase</literal>, that aid in the writing
    of tests for output and performance regressions.
  </para>

  <section id="testcase-extensions.output">
    <title>Testing Output</title>

    <para>
      <indexterm><primary>PHPUnit_Extensions_OutputTestCase</primary></indexterm>

      Sometimes you want to assert that the execution of a method, for
      instance, generates an expected output (via <literal>echo</literal> or
      <literal>print</literal>, for example). The
      <literal>PHPUnit_Extensions_OutputTestCase</literal> class uses PHP's
      <ulink url="http://www.php.net/manual/en/ref.outcontrol.php">Output
      Buffering</ulink> feature to provide the functionality that is
      necessary for this.
    </para>

    <para>
      <xref linkend="testcase-extensions.output.examples.OutputTest.php" />
      shows how to subclass <literal>PHPUnit_Extensions_OutputTestCase</literal>
      and use its <literal>expectOutputString()</literal> method to set the
      expected output. If this expected output is not generated, the test
      will be counted as a failure.
    </para>

    <example id="testcase-extensions.output.examples.OutputTest.php">
      <title>Using PHPUnit_Extensions_OutputTestCase</title>
      <programlisting><![CDATA[<?php
require_once 'PHPUnit/Extensions/OutputTestCase.php';

class OutputTest extends PHPUnit_Extensions_OutputTestCase
{
    public function testExpectFooActualFoo()
    {
        $this->expectOutputString('foo');
        print 'foo';
    }

    public function testExpectBarActualBaz()
    {
        $this->expectOutputString('bar');
        print 'baz';
    }
}
?>]]></programlisting>
      <screen><userinput>phpunit OutputTest</userinput><![CDATA[
PHPUnit 3.2.10 by Sebastian Bergmann.

.F

Time: 0 seconds

There was 1 failure:

1) testExpectBarActualBaz(OutputTest)
Failed asserting that two strings are equal.
expected string <bar>
difference      <  x>
got string      <baz>

FAILURES!
Tests: 2, Failures: 1.]]></screen>
    </example>

    <para>
      <xref linkend="testcase-extensions.output.tables.api" />
      shows the methods provided by
      <literal>PHPUnit_Extensions_OutputTestCase</literal>.
    </para>

    <table id="testcase-extensions.output.tables.api">
      <title>OutputTestCase</title>

      <tgroup cols="2" align="left" colsep="1" rowsep="1">
        <thead>
          <row>
            <entry>Method</entry>
            <entry>Meaning</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><literal>void expectOutputRegex(string $regularExpression)</literal></entry>
            <entry>Set up the expectation that the output matches a <literal>$regularExpression</literal>.</entry>
          </row>
          <row>
            <entry><literal>void expectOutputString(string $expectedString)</literal></entry>
            <entry>Set up the expectation that the output is equal to an <literal>$expectedString</literal>.</entry>
          </row>
          <row>
            <entry><literal>bool setOutputCallback(callable $callback)</literal></entry>
            <entry>Sets up a callback that is used to, for instance, normalize the actual output.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>

  <section id="testcase-extensions.performance">
    <title>Testing Performance</title>

    <para>
      <indexterm><primary>PHPUnit_Extensions_PerformanceTestCase</primary></indexterm>

      You can extend your test class from <literal>PHPUnit_Extensions_PerformanceTestCase</literal>
      to test whether the execution of a function or method call, for
      instance, exceeds a specified time limit.
    </para>

    <para>
      <xref linkend="testcase-extensions.performance.examples.PerformanceTest.php" />
      shows how to subclass <literal>PHPUnit_Extensions_PerformanceTestCase</literal>
      and use its <literal>setMaxRunningTime()</literal> method to set the
      maximum running time for the test. If the test is not executed within
      this time limit, it will be counted as a failure.
    </para>

    <example id="testcase-extensions.performance.examples.PerformanceTest.php">
      <title>Using PHPUnit_Extensions_PerformanceTestCase</title>
      <programlisting><![CDATA[<?php
require_once 'PHPUnit/Extensions/PerformanceTestCase.php';

class PerformanceTest extends PHPUnit_Extensions_PerformanceTestCase
{
    public function testPerformance()
    {
        $this->setMaxRunningTime(2);
        sleep(1);
    }
}
?>]]></programlisting>
    </example>

    <para>
      <xref linkend="testcase-extensions.performance.tables.api" />
      shows the methods provided by
      <literal>PHPUnit_Extensions_PerformanceTestCase</literal>.
    </para>

    <table id="testcase-extensions.performance.tables.api">
      <title>PerformanceTestCase</title>

      <tgroup cols="2" align="left" colsep="1" rowsep="1">
        <thead>
          <row>
            <entry>Method</entry>
            <entry>Meaning</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><literal>void setMaxRunningTime(int $maxRunningTime)</literal></entry>
            <entry>Set the maximum running time for the test to <literal>$maxRunningTime</literal> (in seconds).</entry>
          </row>
          <row>
            <entry><literal>integer getMaxRunningTime()</literal></entry>
            <entry>Return the maximum running time allowed for the test.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <para>
      There are two other extensions to <literal>PHPUnit_Framework_TestCase</literal>,
      <literal>PHPUnit_Extensions_Database_TestCase</literal> and
      <literal>PHPUnit_Extensions_SeleniumTestCase</literal>, that are covered
      in <xref linkend="database" /> and <xref linkend="selenium" />,
      respectively.
    </para>
  </section>
</chapter>
