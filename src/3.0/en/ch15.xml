<?xml version="1.0" encoding="iso-8859-1" ?>

<chapter id="logging">
  <title>Logging</title>

  <caution>
    <para>
      You are looking at the documentation for a version of PHPUnit that is no
      longer supported.
    </para>

    <para>
      The documentation for the current version of PHPUnit can be found
      <ulink url="../../current/en/index.html">here</ulink>.
    </para>
  </caution>

  <para>
    PHPUnit supports the logging of test results in several formats.
  </para>

  <section id="logging.xml">
    <title>XML Format</title>

    <para>
      The XML format supported by PHPUnit is loosely based upon the one
      used by the <ulink url="http://ant.apache.org/manual/OptionalTasks/junit.html">
      JUnit task for Apache Ant</ulink>. The following example shows the XML
      logfile generated for the tests in <literal>ArrayTest</literal>:
    </para>

    <screen><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="ArrayTest"
             file="/home/sb/ArrayTest.php"
             tests="2"
             failures="0"
             errors="0"
             time="0.016030">
    <testcase name="testNewArrayIsEmpty"
              class="ArrayTest"
              file="/home/sb/ArrayTest.php"
              line="6"
              time="0.008044"/>
    <testcase name="testArrayContainsAnElement"
              class="ArrayTest"
              file="/home/sb/ArrayTest.php"
              line="15"
              time="0.007986"/>
  </testsuite>
</testsuites>]]></screen>

    <para>
      The following XML logfile was generated for two tests,
      <literal>testFailure</literal> and <literal>testError</literal>,
      of a test-case class named <literal>FailureErrorTest</literal> and
      shows how failures and errors are denoted.
    </para>

    <screen><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="FailureErrorTest"
             file="/home/sb/FailureErrorTest.php"
             tests="2"
             failures="1"
             errors="1"
             time="0.019744">
    <testcase name="testFailure"
              class="FailureErrorTest"
              file="/home/sb/FailureErrorTest.php"
              line="6"
              time="0.011456">
      <failure type="PHPUnit_Framework_ExpectationFailedException">
testFailure(FailureErrorTest)
Failed asserting that &lt;integer:2&gt; matches expected value &lt;integer:1&gt;.

/home/sb/FailureErrorTest.php:8
</failure>
    </testcase>
    <testcase name="testError"
              class="FailureErrorTest"
              file="/home/sb/FailureErrorTest.php"
              line="11"
              time="0.008288">
      <error type="Exception">testError(FailureErrorTest)
Exception:

/home/sb/FailureErrorTest.php:13
</error>
    </testcase>
  </testsuite>
</testsuites>
]]></screen>
  </section>

  <section id="logging.json">
    <title>JavaScript Object Notation (JSON)</title>

    <para>
      The <ulink url="http://www.json.org/">JavaScript Object Notation (JSON)</ulink>
      is a lightweight data-interchange format. The following example shows
      the JSON messages generated for the tests in <literal>ArrayTest</literal>:
    </para>

    <screen>{"event":"suiteStart","suite":"ArrayTest","tests":2}
{"event":"test","suite":"ArrayTest",
 "test":"testNewArrayIsEmpty(ArrayTest)","status":"pass",
 "time":0.000460147858,"trace":[],"message":""}
{"event":"test","suite":"ArrayTest",
 "test":"testArrayContainsAnElement(ArrayTest)","status":"pass",
 "time":0.000422954559,"trace":[],"message":""}</screen>

    <para>
      The following JSON messages were generated for two tests,
      <literal>testFailure</literal> and <literal>testError</literal>,
      of a test-case class named <literal>FailureErrorTest</literal> and
      show how failures and errors are denoted.
    </para>

    <screen>{"event":"suiteStart","suite":"FailureErrorTest","tests":2}
{"event":"test","suite":"FailureErrorTest",
 "test":"testFailure(FailureErrorTest)","status":"fail",
 "time":0.000483989716,"trace":[],"message":""}
{"event":"test","suite":"FailureErrorTest",
 "test":"testError(FailureErrorTest)","status":"error",
 "time":0.000466108322,"trace":[],"message":""}</screen>
  </section>

  <section id="logging.tap">
    <title>Test Anything Protocol (TAP)</title>

    <para>
      The <ulink url="http://testanything.org/">Test Anything Protocol (TAP)</ulink>
      is Perl's simple text-based interface between testing modules. The
      following example shows the TAP logfile generated for the tests in
      <literal>ArrayTest</literal>:
    </para>

    <screen># TestSuite "ArrayTest" started.
ok 1 - testNewArrayIsEmpty(ArrayTest)
ok 2 - testArrayContainsAnElement(ArrayTest)
# TestSuite "ArrayTest" ended.
1..2</screen>

    <para>
      The following TAP logfile was generated for two tests,
      <literal>testFailure</literal> and <literal>testError</literal>,
      of a test-case class named <literal>FailureErrorTest</literal> and
      shows how failures and errors are denoted.
    </para>

    <screen># TestSuite "FailureErrorTest" started.
not ok 1 - Failure: testFailure(FailureErrorTest)
not ok 2 - Error: testError(FailureErrorTest)
# TestSuite "FailureErrorTest" ended.
1..2</screen>
  </section>

  <section id="logging.graphviz">
    <title>GraphViz Markup</title>

    <para>
      PHPUnit can generate a description of the test result as a graph that
      can be rendered to diagrams in several useful formats such as images
      using the <ulink url="http://www.graphviz.org/">GraphViz</ulink> tools.
    </para>

    <screen><userinput>phpunit --log-graphviz ArrayTest.dot ArrayTest</userinput>
PHPUnit 3.0.0 by Sebastian Bergmann.

..

Time: 00:00

OK (2 tests)</screen>

    <para>
      The following example shows the GraphViz markup generated (and saved
      to the <literal>ArrayTest.dot</literal> file in the current directory)
      for the tests in <literal>ArrayTest</literal>:
    </para>

    <screen>digraph G {
  graph [ overlap="scale", splines="true", sep=".1", fontsize="8" ];
  "ArrayTest" [ color="green" ];
  subgraph "cluster_ArrayTest" {
    label="";
    "testNewArrayIsEmpty" [ color="green" ];
    "testArrayContainsAnElement" [ color="green" ];
  }

  "ArrayTest" -> "testNewArrayIsEmpty";
  "ArrayTest" -> "testArrayContainsAnElement";
}</screen>

    <para>
      We can now use the <literal>dot</literal> command-line tool that is
      part of the GraphViz software suite to generate a graphic from this
      markup:
    </para>

    <screen><userinput>dot -T png -o ArrayTest.png ArrayTest.dot</userinput></screen>

    <para>
      <xref linkend="logging.graphviz.figures.ArrayTest.png" /> shows the
      graph representation of the test result rendered from the GraphViz
      markup above.
    </para>

    <figure id="logging.graphviz.figures.ArrayTest.png">
      <title>Graph representation of the test result</title>

      <graphic fileref="figures/ArrayTest.png" />
    </figure>

    <para>
      Successful tests are displayed with a green border, failures and errors
      with a red border, and incomplete or skipped tests with a yellow border.
      A parent node, such as test suite, is displayed with a non-green border
      if it has a child node, such as a test, that was not successful.
    </para>
  </section>
</chapter>
